pipeline {
	agent any

	environment {
		CONNECT = 'http://sal-moonhyun-vm01.dc1.lan:8080'
		PROJECT = 'hello-java-coverity-demo'
		STREAM = "$PROJECT-jenkins"
	}
	
	stages {	
		stage('Build') {
			steps {
				withCoverityEnvironment(coverityInstanceUrl: "$CONNECT", projectName: "$PROJECT", streamName: "$STREAM") {
					sh 'cov-build --dir idir --fs-capture-search $WORKSPACE mvn -B clean package -DskipTests'
				}
			}
		}
		stage('Analyze'){
			steps {
				withCoverityEnvironment(coverityInstanceUrl: "$CONNECT", projectName: "$PROJECT", streamName: "$STREAM") {
					sh 'cov-analyze --dir idir --ticker-mode none --strip-path $WORKSPACE --webapp-security'
				}
			}			
		}
		stage('Commit'){
			steps {
				withCoverityEnvironment(coverityInstanceUrl: "$CONNECT", projectName: "$PROJECT", streamName: "$STREAM") {
					sh 'cov-commit-defects --dir idir --ticker-mode none --url $COV_URL --stream $COV_STREAM \
							--description $BUILD_TAG --target Linux_x86_64 --version $GIT_COMMIT'
				}
			}			
		}
		stage('Result'){
			steps {
				withCoverityEnvironment(coverityInstanceUrl: "$CONNECT", projectName: "$PROJECT", streamName: "$STREAM") {
					script { // Coverity Quality Gate
						count = coverityIssueCheck(viewName: 'OWASP Web Top 2010', returnIssueCount: true)
						if (count != 0) { unstable 'issues detected' }
					}
				}
			}
		}
	}
	post {
		always {
			cleanWs()
		}
	}
}
